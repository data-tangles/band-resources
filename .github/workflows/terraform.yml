name: Terraform CI

on:
  push:
    branches:
    - "main"
    paths:
    - "terraform/**"
  pull_request:
    paths:
    - "terraform/**"
    
permissions:
  contents: write
  issues: write
  id-token: write

env:
  SOPS_VERSION: 3.9.4
  WORKING_DIRECTORY: "./terraform"

jobs:
  init_and_plan:
    name: Terraform Init and Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    outputs:
      planExitcode: ${{ steps.terraformPlan.outputs.exitcode }}

    steps:

      - name: Checkout 🔔
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Decrypt SOPS encrypted variables 🪙
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v${{ env.SOPS_VERSION }}/sops-v${{ env.SOPS_VERSION }}.linux.amd64
          sudo mv sops-v${{ env.SOPS_VERSION }}.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops
          export SOPS_AGE_KEY=${{ secrets.SOPS_AGE_KEY }}
          sops --decrypt terraform.sops.tfvars > terraform.tfvars

      - name: Install Terraform ⛰️
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}        

      - name: Terraform Init 🏃
        id: terraformInit
        run: terraform init
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Terraform validate ✅
        id: validate
        run: terraform validate

      - name: Terraform Plan 🗺️
        id: terraformPlan
        run: |
          terraform plan -input=false -no-color -out ${{ github.run_id }}.tfplan -detailed-exitcode

      - name: Cache Terraform Plan 📦
        uses: actions/cache/save@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          key: ${{ github.run_id }}

  documentation:
    name: Generate Terraform Documentation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    needs:
      - init_and_plan
    if: github.event_name == 'pull_request'

    steps:

      - name: Checkout 🔔
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          
      - name: Terraform Docs 🗒️
        if: github.event_name == 'pull_request'
        uses: terraform-docs/gh-actions@v1.3.0
        id: terraform-docs
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          output-method: replace
          output-file: TERRAFORM.md
          git-push: "true"

  apply:
    name: Terraform Apply
    needs:
      - init_and_plan
    if: github.event_name != 'pull_request' && needs.init_and_plan.outputs.planExitcode == 2
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}

    steps:

      - name: Manual Approval 🚦
        uses: trstringer/manual-approval@662b3ddbc7685f897992051e87e1b4b58c07dc03 # v1
        timeout-minutes: 5
        with:
          secret: ${{ github.TOKEN }}
          approvers: data-tangles
          minimum-approvals: 1
          issue-title: "Terraform Apply - ${{ github.workflow }}"
          issue-body: "Please approve or deny the Terraform Apply operation"
          exclude-workflow-initiator-as-approver: false

      - name: Checkout 🔔
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Restore Terraform Plan 🗺️
        uses: actions/cache/restore@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        with:
          path: ${{ env.WORKING_DIRECTORY }}/**
          key: ${{ github.run_id }}

      - name: Install Terraform ⛰️
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform Apply 🚀
        run: terraform apply ${{ github.run_id }}.tfplan